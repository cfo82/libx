//-----------------------------------------------------------------------------------------------------------
/*
 *	LibX - A Library to export/import .x-models
 *
 *	This file is
 *		Copyright (C) 2008 Christian Oberholzer <coberholzer@gmx.ch>
 *
 *	It is part of LibX, which is
 *		Copyright (C) 2008 Christian Oberholzer <coberholzer@gmx.ch>
 *		Copyright (C) 2008 Basil Fierz <basil@gmx.ch>
 *
 *	This library is free software; you can redistribute it and/or
 *	modify it under the terms of the GNU Lesser General Public
 *	License version 2.1 as published by the Free Software Foundation.
 *	
 *	This library is distributed in the hope that it will be useful,
 *	but WITHOUT ANY WARRANTY; without even the implied warranty of
 *	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 *	Lesser General Public License for more details.
 *	
 *	You should have received a copy of the GNU Lesser General Public
 *	License along with this library; if not, write to the Free Software
 *	Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
 */
//-----------------------------------------------------------------------------------------------------------

//-----------------------------------------------------------------------------------------------------------
/*!	\file templates/templates.cpp
	\brief Implementation von x::templates-Konstanten
	\version 0.1
	\date 21.9.2003
	\author Christian Oberholzer

	Implementation von  x::templates-Konstanten
*/
//-----------------------------------------------------------------------------------------------------------
#define XLIB_CORE
#include "../global/global.h"
#include "./templates.h"

namespace x { namespace templates {

const Guid g_guids[] = {
	Guid(0x3D82AB4F, 0x62DA, 0x11CF, 0xAB, 0x39, 0x00, 0x20, 0xAF, 0x71, 0xE4, 0x33), // TemplateTypeAnimation
	Guid(0x10DD46A8, 0x775B, 0x11CF, 0x8F, 0x52, 0x00, 0x40, 0x33, 0x35, 0x94, 0xA3), // TemplateTypeAnimationKey
	Guid(0xE2BF56C0, 0x840F, 0x11CF, 0x8F, 0x52, 0x00, 0x40, 0x33, 0x35, 0x94, 0xA3), // TemplateTypeAnimationOptions
	Guid(0x3D82AB50, 0x62DA, 0x11cf, 0xAB, 0x39, 0x00, 0x20, 0xAF, 0x71, 0xE4, 0x33), // TemplateTypeAnimationSet
	Guid(0x9E415A43, 0x7BA6, 0x4A73, 0x87, 0x43, 0xB7, 0x3D, 0x47, 0xE8, 0x84, 0x76), // TemplateTypeAnimTicksPerSecond,
	Guid(0x4885AE61, 0x78E8, 0x11CF, 0x8F, 0x52, 0x00, 0x40, 0x33, 0x35, 0x94, 0xA3), // TemplateTypeBoolean,
	Guid(0x4885AE63, 0x78E8, 0x11CF, 0x8F, 0x52, 0x00, 0x40, 0x33, 0x35, 0x94, 0xA3), // TemplateTypeBoolean2D,
	Guid(0xD3E16E81, 0x7835, 0x11CF, 0x8F, 0x52, 0x00, 0x40, 0x33, 0x35, 0x94, 0xA3), // TemplateTypeColorRGB,
	Guid(0x35FF44E0, 0x6C7C, 0x11CF, 0x8F, 0x52, 0x00, 0x40, 0x33, 0x35, 0x94, 0xA3), // TemplateTypeColorRGBA,
	Guid(0xF6F23F44, 0x7686, 0x11CF, 0x8F, 0x52, 0x00, 0x40, 0x33, 0x35, 0x94, 0xA3), // TemplateTypeCoords2D,
	Guid(0xBF22E553, 0x292C, 0x4781, 0x9F, 0xEA, 0x62, 0xBD, 0x55, 0x4B, 0xDD, 0x93), // TemplateTypeDeclData,
	Guid(0x622C0ED0, 0x956E, 0x4DA9, 0x90, 0x8A, 0x2A, 0xF9, 0x4F, 0x3C, 0xE7, 0x16), // TemplateTypeEffectDWord,
	Guid(0xF1CFE2B3, 0x0DE3, 0x4E28, 0xAF, 0xA1, 0x15, 0x5A, 0x75, 0x0A, 0x28, 0x2D), // TemplateTypeEffectFloats,
	Guid(0xE331F7E4, 0x0559, 0x4CC2, 0x8E, 0x99, 0x1C, 0xEC, 0x16, 0x57, 0x92, 0x8F), // TemplateTypeEffectInstance,
	Guid(0xE13963BC, 0xAE51, 0x4C5D, 0xB0, 0x0F, 0xCF, 0xA3, 0xA9, 0xD9, 0x7C, 0xE5), // TemplateTypeEffectParamDWord,
	Guid(0x3014B9A0, 0x62F5, 0x478C, 0x9B, 0x86, 0xE4, 0xAC, 0x9F, 0x4E, 0x41, 0x8B), // TemplateTypeEffectParamFloats,
	Guid(0x1DBC4C88, 0x94C1, 0x46EE, 0x90, 0x76, 0x2C, 0x28, 0x81, 0x8C, 0x94, 0x81), // TemplateTypeEffectParamString,
	Guid(0xD55B097E, 0xBDB6, 0x4C52, 0xB0, 0x3D, 0x60, 0x51, 0xC8, 0x9D, 0x0E, 0x42), // TemplateTypeEffectString,
	Guid(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0), // TemplateTypeFaceAdjacency,
	Guid(0x10DD46A9, 0x775B, 0x11cf, 0x8F, 0x52, 0x00, 0x40, 0x33, 0x35, 0x94, 0xA3), // TemplateTypeFloatKeys,
	Guid(0x3D82AB46, 0x62DA, 0x11CF, 0xAB, 0x39, 0x00, 0x20, 0xAF, 0x71, 0xE4, 0x33), // TemplateTypeFrame,
	Guid(0xF6F23F41, 0x7686, 0x11CF, 0x8F, 0x52, 0x00, 0x40, 0x33, 0x35, 0x94, 0xA3), // TemplateTypeFrameTransformMatrix,
	Guid(0xB6E70A0E, 0x8EF9, 0x4e83, 0x94, 0xAD, 0xEC, 0xC8, 0xB0, 0xC0, 0x48, 0x97), // TemplateTypeFVFData,
	Guid(0x3D82AB43, 0x62DA, 0x11cf, 0xAB, 0x39, 0x00, 0x20, 0xAF, 0x71, 0xE4, 0x33), // TemplateTypeHeader
	Guid(0x1630B820, 0x7842, 0x11CF, 0x8F, 0x52, 0x00, 0x40, 0x33, 0x35, 0x94, 0xA3), // TemplateTypeIndexedColor,
	Guid(0x3D82AB4D, 0x62DA, 0x11CF, 0xAB, 0x39, 0x00, 0x20, 0xAF, 0x71, 0xE4, 0x33), // TemplateTypeMaterial,
	Guid(0x4885AE60, 0x78E8, 0x11CF, 0x8F, 0x52, 0x00, 0x40, 0x33, 0x35, 0x94, 0xA3), // TemplateTypeMaterialWrap
	Guid(0xF6F23F45, 0x7686, 0x11CF, 0x8F, 0x52, 0x00, 0x40, 0x33, 0x35, 0x94, 0xA3), // TemplateTypeMatrix4x4,
	Guid(0x3D82AB44, 0x62DA, 0x11CF, 0xAB, 0x39, 0x00, 0x20, 0xAF, 0x71, 0xE4, 0x33), // TemplateTypeMesh,
	Guid(0x3D82AB5F, 0x62DA, 0x11CF, 0xAB, 0x39, 0x00, 0x20, 0xAF, 0x71, 0xE4, 0x33), // TemplateTypeMeshFace,
	Guid(0x4885AE62, 0x78E8, 0x11CF, 0x8F, 0x52, 0x00, 0x40, 0x33, 0x35, 0x94, 0xA3), // TemplateTypeMeshFaceWraps,
	Guid(0xF6F23F42, 0x7686, 0x11CF, 0x8F, 0x52, 0x00, 0x40, 0x33, 0x35, 0x94, 0xA3), // TemplateTypeMeshMaterialList,
	Guid(0xF6F23F43, 0x7686, 0x11CF, 0x8F, 0x52, 0x00, 0x40, 0x33, 0x35, 0x94, 0xA3), // TemplateTypeMeshNormals,
	Guid(0xF6F23F40, 0x7686, 0x11CF, 0x8F, 0x52, 0x00, 0x40, 0x33, 0x35, 0x94, 0xA3), // TemplateTypeMeshTextureCoords,
	Guid(0x1630B821, 0x7842, 0x11CF, 0x8F, 0x52, 0x00, 0x40, 0x33, 0x35, 0x94, 0xA3), // TemplateTypeMeshVertexColors,
	Guid(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0), // TemplateTypePatch,
	Guid(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0), // TemplateTypePatchMesh,
	Guid(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0), // TemplateTypePatchMesh9,
	Guid(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0), // TemplateTypePMAttributeRange,
	Guid(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0), // TemplateTypePMInfo,
	Guid(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0), // TemplateTypePMVSplitRecord,
	Guid(0x6F0D123B, 0xBAD2, 0x4167, 0xA0, 0xD0, 0x80, 0x22, 0x4F, 0x25, 0xFA, 0xBB), // TemplateTypeSkinWeights,
	Guid(0xA42790E1, 0x7810, 0x11CF, 0x8F, 0x52, 0x00, 0x40, 0x33, 0x35, 0x94, 0xA3), // TemplateTypeTextureFilename,
	Guid(0xF406B180, 0x7B3B, 0x11cf, 0x8F, 0x52, 0x00, 0x40, 0x33, 0x35, 0x94, 0xA3), // TemplateTypeTimedFloatKeys,
	Guid(0x3D82AB5E, 0x62DA, 0x11CF, 0xAB, 0x39, 0x00, 0x20, 0xAF, 0x71, 0xE4, 0x33), // TemplateTypeVector,
	Guid(0xB8D65549, 0xD7C9, 0x4995, 0x89, 0xCF, 0x53, 0xA9, 0xA8, 0xB0, 0x31, 0xE3), // TemplateTypeVertexDuplicationIndices,
	Guid(0xF752461C, 0x1E23, 0x48F6, 0xB9, 0xF8, 0x83, 0x50, 0x85, 0x0F, 0x33, 0x6F), // TemplateTypeVertexElement,
	Guid(0x3CF169CE, 0xFF7C, 0x44ab, 0x93, 0xC0, 0xF7, 0x8F, 0x62, 0xD1, 0x72, 0xE2), // TemplateTypeXSkinMeshHeader
};

const string_t g_names[] = {
	UNICODE_STRING("Animation"),
	UNICODE_STRING("AnimationKey"),
	UNICODE_STRING("AnimationOptions"),
	UNICODE_STRING("AnimationSet"),
	UNICODE_STRING("AnimTicksPerSecond"),
	UNICODE_STRING("Boolean"),
	UNICODE_STRING("Boolean2D"),
	UNICODE_STRING("ColorRGB"),
	UNICODE_STRING("ColorRGBA"),
	UNICODE_STRING("Coords2D"),
	UNICODE_STRING("DeclData"),
	UNICODE_STRING("EffectDWord"),
	UNICODE_STRING("EffectFloats"),
	UNICODE_STRING("EffectInstance"),
	UNICODE_STRING("EffectParamDWord"),
	UNICODE_STRING("EffectParamFloats"),
	UNICODE_STRING("EffectParamString"),
	UNICODE_STRING("EffectString"),
	UNICODE_STRING("FaceAdjacency"),
	UNICODE_STRING("FloatKeys"),
	UNICODE_STRING("Frame"),
	UNICODE_STRING("FrameTransformMatrix"),
	UNICODE_STRING("FVFData"),
	UNICODE_STRING("Header"),
	UNICODE_STRING("IndexedColor"),
	UNICODE_STRING("Material"),
	UNICODE_STRING("MaterialWrap"),
	UNICODE_STRING("Matrix4x4"),
	UNICODE_STRING("Mesh"),
	UNICODE_STRING("MeshFace"),
	UNICODE_STRING("MeshFaceWraps"),
	UNICODE_STRING("MeshMaterialList"),
	UNICODE_STRING("MeshNormals"),
	UNICODE_STRING("MeshTextureCoords"),
	UNICODE_STRING("MeshVertexColors"),
	UNICODE_STRING("Patch"),
	UNICODE_STRING("PatchMesh"),
	UNICODE_STRING("PatchMesh9"),
	UNICODE_STRING("PMAttributeRange"),
	UNICODE_STRING("PMInfo"),
	UNICODE_STRING("PMVSplitRecord"),
	UNICODE_STRING("SkinWeights"),
	UNICODE_STRING("TextureFilename"),
	UNICODE_STRING("TimedFloatKeys"),
	UNICODE_STRING("Vector"),
	UNICODE_STRING("VertexDuplicationIndices"),
	UNICODE_STRING("VertexElement"),
	UNICODE_STRING("XSkinMeshHeader")
};

}} // namespace x::templates


